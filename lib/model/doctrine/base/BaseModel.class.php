<?php

/**
 * BaseModel
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $category_id
 * @property string $name
 * @property string $cover_img
 * @property string $description
 * @property integer $price
 * @property boolean $publish
 * @property boolean $promote
 * @property Category $Category
 * @property Doctrine_Collection $Images
 * 
 * @method integer             getCategoryId()  Returns the current record's "category_id" value
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getCoverImg()    Returns the current record's "cover_img" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method integer             getPrice()       Returns the current record's "price" value
 * @method boolean             getPublish()     Returns the current record's "publish" value
 * @method boolean             getPromote()     Returns the current record's "promote" value
 * @method Category            getCategory()    Returns the current record's "Category" value
 * @method Doctrine_Collection getImages()      Returns the current record's "Images" collection
 * @method Model               setCategoryId()  Sets the current record's "category_id" value
 * @method Model               setName()        Sets the current record's "name" value
 * @method Model               setCoverImg()    Sets the current record's "cover_img" value
 * @method Model               setDescription() Sets the current record's "description" value
 * @method Model               setPrice()       Sets the current record's "price" value
 * @method Model               setPublish()     Sets the current record's "publish" value
 * @method Model               setPromote()     Sets the current record's "promote" value
 * @method Model               setCategory()    Sets the current record's "Category" value
 * @method Model               setImages()      Sets the current record's "Images" collection
 * 
 * @package    NuevasFormas
 * @subpackage model
 * @author     Danilo R. Frid
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseModel extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('model');
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 100,
             ));
        $this->hasColumn('cover_img', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('price', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('publish', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('promote', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasMany('ModelImage as Images', array(
             'local' => 'id',
             'foreign' => 'model_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'name',
             ),
             'canUpdate' => true,
             ));
        $sortable0 = new Doctrine_Template_Sortable(array(
             'uniqueBy' => 
             array(
              0 => 'category_id',
             ),
             ));
        $this->actAs($sluggable0);
        $this->actAs($sortable0);
    }
}